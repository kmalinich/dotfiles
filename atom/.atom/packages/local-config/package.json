{
  "_args": [
    [
      {
        "raw": "/private/var/folders/yh/_mf_cnvd44s8t5h31tr4jktjt1_js9/T/d-116830-1407-h7ie43/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/yh/_mf_cnvd44s8t5h31tr4jktjt1_js9/T/d-116830-1407-h7ie43/package.tgz",
        "spec": "/private/var/folders/yh/_mf_cnvd44s8t5h31tr4jktjt1_js9/T/d-116830-1407-h7ie43/package.tgz",
        "type": "local"
      },
      "/private/var/folders/yh/_mf_cnvd44s8t5h31tr4jktjt1_js9/T/apm-install-dir-116830-1407-7d3l5x"
    ]
  ],
  "_from": "../d-116830-1407-h7ie43/package.tgz",
  "_id": "local-config@0.1.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/local-config",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/yh/_mf_cnvd44s8t5h31tr4jktjt1_js9/T/d-116830-1407-h7ie43/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/yh/_mf_cnvd44s8t5h31tr4jktjt1_js9/T/d-116830-1407-h7ie43/package.tgz",
    "spec": "/private/var/folders/yh/_mf_cnvd44s8t5h31tr4jktjt1_js9/T/d-116830-1407-h7ie43/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-116830-1407-h7ie43/package.tgz",
  "_shasum": "3154f19380d9a36c78654d73e7a83aebbdac248c",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/yh/_mf_cnvd44s8t5h31tr4jktjt1_js9/T/d-116830-1407-h7ie43/package.tgz",
  "_where": "/private/var/folders/yh/_mf_cnvd44s8t5h31tr4jktjt1_js9/T/apm-install-dir-116830-1407-7d3l5x",
  "bugs": {
    "url": "https://github.com/leny/atom-local-config/issues"
  },
  "dependencies": {
    "cson-parser": "^1.2.0"
  },
  "description": "Override atom's config with a local file.",
  "devDependencies": {},
  "engines": {
    "atom": "*"
  },
  "homepage": "https://github.com/leny/atom-local-config#readme",
  "license": "MIT",
  "main": "./lib/main",
  "name": "local-config",
  "optionalDependencies": {},
  "readme": "# `Local Config` package\n\n> Override atom's config with a local file.\n\n* * *\n\n## How it works?\n\nWhen a folder/project is loaded inside atom, **local-config** look for a local config file. If one is found, **local-config** will firstly backup your actual config, then override the config with the parameters inside the local config file.\n\nIf Atom can't find a local config file, it will restore the previously backed up config, if exists.\n\n### Commands\n\n#### Apply local config\n\nLook for a local config file then apply it if exists.\n\n#### Restore config\n\nRestore previously backed up config.\n\n### Settings\n\n#### Local config file path\n\n> Array of paths to lookup in project for local config file.\n\n**default:** `\".atom\", \".atom.cson\", \"atom.cson\", \".config.cson\", \"config.cson\", \"atom-config.cson\"`\n\n#### Auto apply\n\n> If a local config file is found when project is loaded, it will be applied.\n\n**default:** `false`\n\n* * *\n\n**Note:** this package is a simple (and probably a bit _dirty_) workaround until the \"per-project settings\" will be implemented in Atom's core.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/leny/atom-local-config.git"
  },
  "version": "0.1.2"
}
